<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<description>Spring IOC beans for the baseball application.</description>

	<context:annotation-config/>
	<context:component-scan base-package="com.daluga.baseball.model"/>    

    <!-- ================================================================================================= -->
    <!-- Scan the package looking for the @Repository annotation.                                         -->
    <!-- ================================================================================================= -->
	<jpa:repositories base-package="com.daluga.baseball.model.repository" />

    <!-- ================================================================================================= -->
    <!-- Baseball datasource definition (HSQLDB).                                                               -->
    <!-- ================================================================================================= -->
    <bean id="baseballDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close"
      	p:driverClassName="org.hsqldb.jdbcDriver"
	   	p:url="jdbc:hsqldb:hsql://localhost/baseball"
        p:username="sa"
        p:password=""
        p:initialSize="2"
        p:maxTotal="5"
     />
    
    <!-- ================================================================================================= -->
    <!-- Configure the Entity Manager Factory.                                                             -->
    <!-- ================================================================================================= -->                       
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
	    p:persistenceUnitName="jpa.baseball"
	    p:persistenceXmlLocation="classpath:META-INF/persistence.xml" 
		p:dataSource-ref="baseballDataSource"
		p:jpaVendorAdapter-ref="jpaVendorAdapter"		
	/>
	
	<!-- p:persistenceUnitManager-ref="persistenceUnitManager" -->

	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="HSQL"
		p:showSql="true"
		p:generateDdl="false"
	/>		
					
    <!-- ================================================================================================= -->
    <!-- Hibernate configuration and supporting beans.                                                     -->   
    <!-- ================================================================================================= -->          	 
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
        p:dataSource-ref="baseballDataSource"        
        p:hibernateProperties-ref="hibernateProperties"
        p:packagesToScan="com.daluga.baseball.model.domain"
    />
    
    <util:properties id="hibernateProperties">
        <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>   
	</util:properties>
               
    <!-- This will force the hibernate specific exception into a spring data access exception when used with @Repository annotation. -->
	<!-- <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->
<!--     <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/> -->
   
 	<!-- ================================================================================================= -->
    <!-- Configure the transaction manager bean for hibernate.                                             -->
    <!-- ================================================================================================= -->
 
     <!-- This turns on the annotation based transaction management. -->	  
    <!-- <tx:annotation-driven/> -->
	<tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactory"
    />
    
	<!--  TODO: Look into this more -->
	<!--  <tx:jta-transaction-manager /> -->    
    	
</beans>